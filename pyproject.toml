[tool.poetry]
name = "nisystemlink-clients"
version = "0.4.0"
description = "NI-SystemLink Python API"
authors = ["National Instruments"]
maintainers = ["Carson Moore <carson.moore@ni.com>", "Paul Spangler <paul.spangler@ni.com>", "Cameron Waterman <cameron.waterman@ni.com>"]
keywords = ["nisystemlink", "systemlink"]
license = "MIT"
readme = "README.rst"
packages = [{ include = "nisystemlink" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: System :: Hardware :: Hardware Drivers",
]

[tool.poetry.dependencies]
python   = "^3.8"
aenum    = "^3.1.11"
Events   = "^0.4"
httpx    = "^0.23.0"
requests = "^2.28.1"
uplink   = "^0.9.7"
pydantic = "^1.10.2"

[tool.poetry.group.dev.dependencies]
black               = "^22.10.0"
flake8              = "^5.0.4"
flake8-import-order = "^0.18.1"
pytest              = "^7.2.0"
pytest-asyncio      = "^0.20.1"
mypy                = "^0.982"
flake8-docstrings   = "^1.6.0"
poethepoet          = "^0.16.4"
types-requests      = "^2.28.11.4"

[tool.poe.tasks]
test    = "pytest tests -m \"(not slow) and (not cloud) and (not enterprise)\""
doctest = "pytest --doctest-modules docs"
check   = "black --check nisystemlink examples tests"
format  = "black nisystemlink examples tests"
lint    = "flake8 nisystemlink examples tests"
types   = "mypy --config-file mypy.ini nisystemlink examples/tag tests"

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "cloud: mark a test as a cloud integration test",
    "enterprise: mark a test as an enterprise integration test",
    "webserver: mark a test as a webserver integration test",
    "slow: mark a test as a slow test",
]

[tool.black]
exclude = ".*\\.pyi"

[tool.semantic_release]
branch               = "master"
version_toml         = ["pyproject.toml:tool.poetry.version"]
build_command        = "poetry build"
major_on_zero        = false

[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
